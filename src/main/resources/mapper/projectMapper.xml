<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="me.project.funding.mapper.ProjectMapper">

    <sql id="selectFromProject">
        select
            project_no
            , member_no
            , category_id
            , project_title
            , project_intro
            , budget_plan
            , schedule_plan
            , project_image
            , project_price
            , open_date
            , close_date
            , delivery_date
            , project_content
            , fund_price
            , project_step
        from project
    </sql>


    <resultMap id="ProjectWithMember" type="me.project.funding.dto.ProjectDTO">
        <association property="me.project.funding.dto.MemberDTO" column="memberNo" javaType="me.project.funding.dto.MemberDTO" select="selectMember">
        </association>
    </resultMap>

    <resultMap id="RewardWithProject" type="me.project.funding.dto.RewardDTO">
        <association property="me.project.funding.dto.ProjectDTO" column="projectNo" javaType="me.project.funding.dto.ProjectDTO" select="selectProject">
        </association>
    </resultMap>
    
    <select id="selectMember" resultType="me.project.funding.dto.MemberDTO">
        select * from member
    </select>
    <select id="selectProject" resultType="me.project.funding.dto.ProjectDTO">
        select * from project
    </select>

    <select id="findOnWritingProject" parameterType="me.project.funding.dto.MemberDTO" resultType="me.project.funding.dto.ProjectDTO">
        <include refid="selectFromProject"/>
        where member_no = #{memberNo}
            and project_step = 0
    </select>

    <select id="findByNo" parameterType="int" resultType="me.project.funding.dto.ProjectDTO">
        <include refid="selectFromProject" />
        where project_no = #{projectNo}
    </select>

    <insert id="insert" parameterType="me.project.funding.dto.ProjectDTO">
        <selectKey order="BEFORE" resultType="int" keyProperty="projectNo">
            select project_seq.nextval from dual
        </selectKey>
        insert into project (project_no, project_intro, category_id, member_no)
        values (#{projectNo}, #{projectIntro}, #{categoryId}, #{memberNo})
    </insert>

    <update id="update" parameterType="me.project.funding.dto.ProjectDTO">
        update project
            set
                category_id = NVL(#{categoryId}, category_id)
                , project_title = NVL(#{projectTitle}, project_title)
                , project_intro = NVL(#{projectIntro}, project_intro)
                , budget_plan =NVL(#{budgetPlan},budget_plan)
                , schedule_plan = NVL(#{schedulePlan}, schedule_plan)
                , project_image = NVL(#{projectImage}, project_image)
                , project_price = NVL(#{projectPrice}, project_price)
                , open_date = NVL(#{openDate}, open_date)
                , close_date = NVL(#{closeDate}, close_date)
                , delivery_date = NVL(#{deliveryDate}, delivery_date)
                , project_content = NVL(#{projectContent}, project_content)
                , fund_price = NVL(#{fundPrice}, fund_price)
        where project_no = #{projectNo}
    </update>

    <delete id="delete" parameterType="int">
        delete project
        where project_no = #{projectNo}
    </delete>

    <select id="getCategory" resultType="me.project.funding.dto.CategoryDTO">
        select category_no, category_name
        from category
        order by category_no
    </select>

    <select id="getTotalCnt" parameterType="me.project.funding.commons.Pagination" resultType="int">
        select count(*)
        from project
        <where>
            <if test="category != null and !''.equals(category)">
                AND category_id = #{category}
            </if>
            <if test="keyword != null and !''.equals(keyword)">
                AND project_title LIKE '%' || #{keyword} || '%'
            </if>
            <if test="filter != null and !''.equals(filter)">
                AND project_step = #{filter}
            </if>
        </where>
    </select>

    <select id="findAllByFilterAndOrder" parameterType="me.project.funding.commons.Pagination" resultType="me.project.funding.dto.ProjectDTO">
        select
        row_number() over (order by pj.project_no desc) r
        , pj.*
        , nvl(sum, 0) sum
        from project pj
        left join (
        select project_no, sum(payment_amount) sum
        from payment
        group by project_no
        ) py
        on pj.project_no = py.project_no

        <where>
            <if test="category != null and !''.equals(category)">
                AND category_id = #{category}
            </if>
            <if test="keyword != null and !''.equals(keyword)">
                AND project_title LIKE '%' || #{keyword} || '%'
            </if>
            <if test="filter != null and !''.equals(filter)">
                AND project_step = #{filter}
            </if>
        </where>

        <choose>
            <when test="order != null and order.equals('open_date')">
                order by open_date desc
            </when>
            <when test="order != null and order.equals('close_date')">
                order by open_date
            </when>
            <otherwise>
                order by r
            </otherwise>
        </choose>

    </select>

</mapper>